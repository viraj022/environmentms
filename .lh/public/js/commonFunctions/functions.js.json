{
    "sourceFile": "public/js/commonFunctions/functions.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1648111969238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1648111981512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n         headers: {\n             \"Authorization\": \"Bearer \" + $('meta[name=api-token]').attr(\"content\"),\n             'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n             \"Accept\": \"application/json\",\n-            \n+            'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n         },\n         url: url,\n         data: data,\n         cache: false,\n"
                }
            ],
            "date": 1648111969238,
            "name": "Commit-0",
            "content": "function ajaxRequest(Method, url, data, callBack) {\n    $.ajax({\n        type: Method,\n        headers: {\n            \"Authorization\": \"Bearer \" + $('meta[name=api-token]').attr(\"content\"),\n            'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n            \"Accept\": \"application/json\",\n            \n        },\n        url: url,\n        data: data,\n        cache: false,\n        success: function (result) {\n            if (typeof callBack !== 'undefined' && callBack != null && typeof callBack === \"function\") {\n                callBack(result);\n            }\n        }, error: function (jqXHR, exception) {\n            console.log(jqXHR.responseJSON.message);\n            var msg = '';\n            if (jqXHR.status === 0) {\n                msg = 'Not connect.\\n Verify Network.';\n            } else if (jqXHR.status == 401) {\n                msg = 'You Dont Have Privilege To Performe This Action!';\n            } else if (jqXHR.status == 422) {\n                msg = 'Validation Error ! \\n' + jqXHR.responseJSON.message;\n            } else if (jqXHR.status == 404) {\n                msg = 'Requested page not found. [404]';\n            } else if (jqXHR.status == 500) {\n                msg = 'Internal Server Error [500].';\n            } else if (exception === 'parsererror') {\n                msg = 'Requested JSON parse failed.';\n            } else if (exception === 'timeout') {\n                msg = 'Time out error.';\n            } else if (exception === 'abort') {\n                msg = 'Ajax request aborted.';\n            } else {\n                msg = 'Uncaught Error.\\n' + jqXHR.responseText;\n            }\n//            Toast.fire({\n//                type: 'error',\n//                title: 'Error</br>' + msg\n//            });\n            if (typeof callBack !== 'undefined' && callBack != null && typeof callBack === \"function\") {\n                callBack(msg);\n            }\n        }\n    });\n}\n\nfunction submitDataWithFile(url, frmDta, callBack, metod = false) {\n    let formData = new FormData();\n    // populate fields\n    $.each(frmDta, function (k, val) {\n        formData.append(k, val);\n    });\n    ulploadFile2(url, formData, function (result) {\n        if (typeof callBack !== 'undefined' && callBack !== null && typeof callBack === \"function\") {\n            callBack(result);\n        }\n    }, metod);\n}\n\nfunction show_mesege(resp_id) {\n    if (resp_id.id == 1) {\n        Swal.fire({\n            type: 'success',\n            title: 'Envirmontal MS</br>Success!'\n        });\n    } else {\n        Swal.fire({\n            type: 'error',\n            title: 'Enviremontal MS</br>'+resp_id\n        });\n    }\n}\nconst Toast = Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 4000\n\n});\n"
        }
    ]
}